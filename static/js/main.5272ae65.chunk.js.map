{"version":3,"sources":["AppBar.js","Common.js","videoInput.js","viewHistoryItem.js","ViewHistory.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","props","classes","react_default","a","createElement","className","AppBar_default","position","Toolbar_default","IconButton_default","color","aria-label","Menu_default","Typography_default","variant","validateUrl","url","match","VideoInput","state","videoUrl","setUrl","handleChange","prop","event","_this","setState","Object","defineProperty","target","value","handleClickLoadVideo","onVideoLoad","this","TextField_default","id","classNames","margin","textField","type","label","onChange","InputProps","endAdornment","InputAdornment_default","onClick","index_es","React","Component","theme","display","flexWrap","spacing","unit","width","marginBottom","top","right","bottom","left","ViewHistoryItem","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClickOldVideo","onLoadOldVideo","text","date","time","core_index_es","title","ListItem_default","ListItemAvatar_default","Avatar_default","Videocam_default","ListItemText_default","primary","secondary","ViewHistory","dense","itemurl","element","Grid_default","item","xs","md","demo","List_default","viewHistoryItem","history","map","index","cloneElement","key","backgroundColor","palette","background","paper","concat","float","videoBoxStyle","height","App","getYouTubeVideoId","length","loadVideo","newUrl","isold","arguments","undefined","toConsumableArray","CurrentDate","inputValue","indexOf","console","log","NewVideo","some","u","OldVideo","oldUrl","document","Date","aaaa","getFullYear","gg","getDate","mm","getMonth","cur_day","hours","getHours","minutes","getMinutes","seconds","getSeconds","src_AppBar","videoInput","src","style","src_ViewHistory","Boolean","window","location","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5272ae65.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n};\r\n\r\nfunction JamilAppBar(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n            Jamil Video Player\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nJamilAppBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(JamilAppBar);"," const validateUrl = (url) =>{\r\n    var regExp =/(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/;\r\n    // /(youtube|youtu|vimeo|dailymotion|kickstarter)\\.(com|be)\\/((watch\\?v=([-\\w]+))|(video\\/([-\\w]+))|(projects\\/([-\\w]+)\\/([-\\w]+))|([-\\w]+))/;\r\n    var match = url.match(regExp);\r\n    if (match)\r\n      return true;\r\n    else\r\n      return false;\r\n  };\r\n  export default validateUrl;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Add } from '@material-ui/icons';\r\nimport  validateUrl  from './Common';\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  textField: {\r\n    width: '85vw',\r\n    margin: 'auto',\r\n    marginBottom: 25,\r\n    top: 15,\r\n    right: 0,\r\n    bottom: 10,\r\n    left: 0\r\n  },\r\n});\r\n\r\nclass VideoInput extends React.Component {\r\n  state = {\r\n    videoUrl: '',\r\n    setUrl: false,\r\n  };\r\n\r\n  \r\n\r\n  handleChange = prop => event => {\r\n    this.setState({ [prop]: event.target.value });\r\n  };\r\n  //Description: Validat input value as url and pass it to parent on success.\r\n  handleClickLoadVideo = () => {\r\n    this.setState(state => ({ setUrl: !state.setUrl }));\r\n    if (validateUrl(this.state.videoUrl))\r\n      this.props.onVideoLoad(this.state.videoUrl);\r\n    else\r\n    {\r\n      //TO DO: Change border color with invalid URL message\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <TextField\r\n          id=\"outlined-adornment-videoUrl\"\r\n          className={classNames(classes.margin, classes.textField)}\r\n          variant=\"outlined\"\r\n          type={this.state.setUrl ? 'text' : 'video Url'}\r\n          label=\"video Url\"\r\n          value={this.state.videoUrl}\r\n          onChange={this.handleChange('videoUrl')}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"Toggle videoUrl visibility\"\r\n                  onClick={this.handleClickLoadVideo}\r\n                >\r\n                <Add></Add>\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nVideoInput.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(VideoInput);\r\n","import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport VideoCamIcon from '@material-ui/icons/Videocam';\r\nimport './App.css';\r\nimport { Tooltip } from \"@material-ui/core\";\r\n\r\nclass ViewHistoryItem extends React.Component {\r\n    state = {\r\n        videoUrl: '',\r\n      };\r\n    constructor(props) {\r\n        super(props);\r\n        this.text = this.props.text;\r\n        this.date =    this.props.time;\r\n        \r\n    }\r\n    //Description: Used to pass video url to parent component.\r\n    handleClickOldVideo = () => {\r\n        this.props.onLoadOldVideo(this.text);\r\n      };\r\n    \r\n    render() {\r\n        return (<Tooltip  title=\"Click to view\"><ListItem text={this.text} date={this.date} onClick={this.handleClickOldVideo}  >\r\n            <ListItemAvatar>\r\n              <Avatar>\r\n                <VideoCamIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText \r\n             \r\n              text={this.text} date={this.date}\r\n              primary={this.text}\r\n              secondary={this.date}\r\n              className=\"urltext\"\r\n            />\r\n            {/* TO DO: add delete from history */}\r\n            {/* <ListItemSecondaryAction>\r\n              <IconButton aria-label=\"Delete\">\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </ListItemSecondaryAction> */}\r\n          </ListItem>\r\n          </Tooltip>\r\n        )\r\n    }\r\n}\r\n\r\nexport default (ViewHistoryItem);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ViewHistoryItem from './viewHistoryItem';\r\nimport './App.css';\r\n\r\nconst styles = theme => ({\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  title: {\r\n    margin: `${theme.spacing.unit * 4}px 0 ${theme.spacing.unit * 2}px`,\r\n    float: 'none'\r\n  }\r\n});\r\n//Description: Build history items.\r\nfunction generate(element,arr) {\r\n  return arr.map((value,index) =>\r\n    React.cloneElement(element, {\r\n      key: index, text : value.url\r\n      , time : value.time\r\n    })\r\n  );\r\n}\r\n\r\nclass ViewHistory extends React.Component {\r\n  state = {\r\n    dense: false\r\n  };\r\n  //Description: Used to pass video url to parent component.\r\n  onLoadOldVideo = (itemurl) => {\r\n    this.props.onLoadOldVideo(itemurl);\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { dense } = this.state;\r\n    return (\r\n      <div className=\"root\">\r\n          <Grid item xs={12} md={6}>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              History\r\n            </Typography>\r\n            <div className={classes.demo}>\r\n              <List dense={dense}>\r\n                {generate(\r\n                 <ViewHistoryItem  onLoadOldVideo={this.onLoadOldVideo}></ViewHistoryItem>,this.props.history\r\n                )}\r\n              </List>\r\n            </div>\r\n          </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nViewHistory.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ViewHistory);\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport JamilAppBar from './AppBar';\nimport VideoInput from './videoInput';\nimport ViewHistory from './ViewHistory'\nconst videoBoxStyle = {\n  width: '100%',\n  height: '100%'\n};\n\n\n\n\nclass App extends Component {\n  componentDidMount(){\n    document.title =\"Jamil Video Player\"\n  }\n  CurrentDate() {\n    var date = new Date();\n    var aaaa = date.getFullYear();\n    var gg = date.getDate();\n    var mm = (date.getMonth() + 1);\n    if (gg < 10)\n        gg = \"0\" + gg;\n    if (mm < 10)\n        mm = \"0\" + mm;\n    var cur_day = aaaa + \"-\" + mm + \"-\" + gg;\n    var hours = date.getHours()\n    var minutes = date.getMinutes()\n    var seconds = date.getSeconds();\n    if (hours < 10)\n        hours = \"0\" + hours;\n    if (minutes < 10)\n        minutes = \"0\" + minutes;\n    if (seconds < 10)\n        seconds = \"0\" + seconds;\n    return cur_day + \" \" + hours + \":\" + minutes + \":\" + seconds;\n}\n  constructor(props) {\n    super(props);\n    this.state = { videoUrl : '', history : []};\n  //   this.state = { videoUrl : 'https://www.youtube.com/embed/rL8X2mlNHPM'\n  //   //  'https://video.dtube.top/ipfs/QmfA1jdjQ77Mexmh85mCGWpJVNS4nozZLvFXcgPYxYKMoo'\n  //   , history : [{ \"url\":'https://www.youtube.com/embed/rL8X2mlNHPM', \"time\": this.CurrentDate()}\n  //   //, { \"url\":'https://www.youtube.com/watch?v=cm80MKn_ZQ8', \"time\": this.CurrentDate()}\n  // ]\n  //    };\n  }\n  getYouTubeVideoId = (url) => {\n    var regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=)([^#\\&\\?]*).*/;\n    var match = url.match(regExp);\n\n    if (match && match[2].length == 11) {\n        return match[2];\n    } else {\n        return 'error';\n    }\n  }\n  validateUrl = (url) =>{\n    var regExp =/(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/;\n    // /(youtube|youtu|vimeo|dailymotion|kickstarter)\\.(com|be)\\/((watch\\?v=([-\\w]+))|(video\\/([-\\w]+))|(projects\\/([-\\w]+)\\/([-\\w]+))|([-\\w]+))/;\n    var match = url.match(regExp);\n    if (match)\n      return true;\n    else\n      return false;\n  }\n   loadVideo = (newUrl, isold=false) =>{\n    if (newUrl != null && newUrl != undefined && newUrl !='' && this.validateUrl(newUrl)) {\n      if (!isold)\n        this.setState({\n          history: [...this.state.history,{ \"url\": newUrl,\"time\": this.CurrentDate()}]\n        });\n      var inputValue = newUrl;\n      if (inputValue.indexOf('youtube') >0){\n         this.setState({videoUrl :\"https://www.youtube.com/embed/\"+ this.getYouTubeVideoId(inputValue)});\n      }\n      else {\n        this.setState({videoUrl : inputValue});\n      }\n    }\n    else console.log('Failed');\n   }\n    NewVideo = (newUrl) => {\n      if (!this.state.history.some(u => u.url === newUrl ))\n          this.loadVideo(newUrl);\n      else console.log('Old URl request');\n    }\n\n    OldVideo = (oldUrl) => {\n      this.loadVideo(oldUrl,true);\n    }\n  render() {\n    return (\n      <div className=\"App\">\n        <JamilAppBar />\n        <div>\n          <VideoInput onVideoLoad={this.NewVideo} />\n          { this.state.videoUrl != '' ?\n            <div className=\"divBoxStyle\">\n              <iframe  id=\"videoFrame\" title=\"JamilVideoPlayer\" src={this.state.videoUrl} style={videoBoxStyle}></iframe>\n            </div>\n            :\n            <div></div>\n          }\n          <ViewHistory onLoadOldVideo={this.OldVideo}  history={this.state.history}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}